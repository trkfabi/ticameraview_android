/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package ti.cameraview

import org.appcelerator.kroll.KrollDict
import org.appcelerator.kroll.KrollModule
import org.appcelerator.kroll.annotations.Kroll
import ti.cameraview.camera.CameraUtils
import ti.cameraview.constant.Defaults
import android.util.Log

@Kroll.module(name="ticameraview", id="ti.cameraview")
class TicameraviewModule : KrollModule() {
    companion object {
		public const val LCAT = "ti.cameraview"

		@JvmStatic var cameraList: ArrayList<KrollDict> = arrayListOf()

		@JvmStatic
		fun retrieveCameraList(): ArrayList<KrollDict> {
			if (cameraList.size == 0) {
				cameraList = CameraUtils.getCameraList()
			}
			Log.i(LCAT, "cameralist ${cameraList}")
			return cameraList
		}

		@Kroll.constant const val CAMERA_MODE_PHOTO = Defaults.CAMERA_MODE_PHOTO
		@Kroll.constant const val CAMERA_MODE_VIDEO = Defaults.CAMERA_MODE_VIDEO

		@Kroll.constant const val TORCH_MODE_OFF = Defaults.TORCH_MODE_OFF
		@Kroll.constant const val TORCH_MODE_ON = Defaults.TORCH_MODE_ON

		@Kroll.constant const val ASPECT_RATIO_4_3 = Defaults.ASPECT_RATIO_4_3
		@Kroll.constant const val ASPECT_RATIO_16_9 = Defaults.ASPECT_RATIO_16_9

		@Kroll.constant const val FLASH_MODE_AUTO = Defaults.FLASH_MODE_AUTO
		@Kroll.constant const val FLASH_MODE_ON = Defaults.FLASH_MODE_ON
		@Kroll.constant const val FLASH_MODE_OFF = Defaults.FLASH_MODE_OFF

		@Kroll.constant const val SCALE_TYPE_FIT_CENTER = Defaults.SCALE_TYPE_FIT_CENTER
		@Kroll.constant const val SCALE_TYPE_FILL_CENTER = Defaults.SCALE_TYPE_FILL_CENTER

		@Kroll.constant const val FOCUS_MODE_AUTO = Defaults.FOCUS_MODE_AUTO
		@Kroll.constant const val FOCUS_MODE_TAP = Defaults.FOCUS_MODE_TAP

		@Kroll.constant const val CAMERA_TYPE_BACK = Defaults.CAMERA_TYPE_BACK
		@Kroll.constant const val CAMERA_TYPE_FRONT = Defaults.CAMERA_TYPE_FRONT

		@Kroll.constant const val IMAGE_QUALITY_NORMAL = Defaults.IMAGE_QUALITY_NORMAL
		@Kroll.constant const val IMAGE_QUALITY_HIGH = Defaults.IMAGE_QUALITY_HIGH

		@Kroll.constant const val IMAGE_TYPE_FILE = Defaults.IMAGE_TYPE_FILE
	}

	override fun getApiName(): String? {
		return "ti.cameraview"
	}

	@Kroll.getProperty
	fun getCameraList(): Array<Any> {
		return retrieveCameraList().toArray()
	}

}
